HELP.md
target/
!.mvn/wrapper/maven-wrapper.jar
!**/src/main/**
!**/src/test/**

.mvn/*
mvnw
mvnw.cmd

### STS ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache

### IntelliJ IDEA ###
.idea
*.iws
*.iml
*.ipr

### NetBeans ###
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/
build/
tmp/


### VS Code ###
.vscode/

*.pyc
*.log
*.idea/
*.xlsx
!tests/data_files/*.xlsx
*.Python
venv/
venv3/
*.zip
!tests/data_files/*.zip
documents/*
valid_cibil_files/*
.DS_Store
*.out
*/reports_table_migration/data_files/
input_files/razorpay/
*.coverage

node_modules/


### Additional .gitignores ####
# Local .terraform directories
**/.terraform/*
.terraform*
.idea
terraform.tfstate
terraform.tfstate.backup


# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
#*.tfvars
#*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
